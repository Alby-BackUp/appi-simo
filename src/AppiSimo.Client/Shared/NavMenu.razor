@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">AppiSimo.Client</a>
    <button class="navbar-toggler" @onclick="@ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="@ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            @if(_isAuthenticated)
            {
                <NavLink class="nav-link" href="club-dashboard" Match="NavLinkMatch.Prefix">
                    <span class="oi oi-dashboard" aria-hidden="true"></span> Club Dashboard
                </NavLink>   
            }
        </li>

    </ul>
</div>

@code {
    bool _collapseNavMenu = true;
    bool _isAuthenticated;

    string NavMenuCssClass => _collapseNavMenu ? "collapse" : null;
    
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        _isAuthenticated = authState.User.Identity.IsAuthenticated;
    }
    
    void ToggleNavMenu()
    {
        _collapseNavMenu = !_collapseNavMenu;
    }
}