@using System.Globalization
@using NodaTime
@using System.ComponentModel.Design
@inherits InputLocalDatePicker

<div class="mat-datepicker-calendar-container">
<MatTextFieldView
    Class="@($"{Class} {FieldClass}")"
    Style="@Style"
    Icon="@MatIconNames.Calendar_today"
    IconTrailing="true"
    Label="@Label"
    Dense="@Dense"
    HelperText="@HelperText"
    Outlined="@Outlined"
    FullWidth="@FullWidth"
    PlaceHolder="@PlaceHolder"
    Required="@Required"
    Disabled="@Disabled"
    ReadOnly="true"
    Id="@Id"
    Value="@(Value != null ? DateFormat.Format(Value.Value) : "")"
    @onclick="() => IsOpen = !IsOpen">
</MatTextFieldView>


    <div class="mat-datepicker-calendar animate arrowTop @(IsOpen ? "open" : "")" >
        <div class="mat-datepicker-months">
            <span class="mat-datepicker-prev-month" @onclick="() => Add(Period.FromYears(-1))">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 17 17">
                    <g></g><path d="M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z"></path>
                </svg>
            </span>
            <span class="mat-datepicker-prev-month" @onclick="() => Add(Period.FromMonths(-1))">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 17 17">
                    <g></g><path d="M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z"></path>
                </svg>
            </span>
    
            <div class="mat-datepicker-month-year">
                <div @onclick="() => State = DatePickerStates.Month">
                    @CultureInfo.CurrentCulture.DateTimeFormat.MonthNames[RenderedValue.Month - 1]
                </div>
                <div @onclick="() => State = DatePickerStates.Year">
                    @RenderedValue.Year.ToString("0000")
                </div>
            </div>       
    
            <span class="mat-datepicker-next-month" @onclick="() => Add(Period.FromMonths(1))">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 17 17">
                    <g></g><path d="M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z"></path>
                </svg>
            </span>
             <span class="mat-datepicker-prev-month" @onclick="() => Add(Period.FromYears(1))">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 17 17">
                    <g></g><path d="M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z"></path>
                </svg>
            </span>
        </div>


        <CascadingValue Value="@RenderedValue" Name="RenderedValue">
    
            @switch (State)
            {
                case DatePickerStates.Day:
                    <DaysDatePickerView FirstDayOfWeek="@FirstDayOfWeek" Value="@RenderedValue" ValueChanged="@((v) => SetDate(v))"></DaysDatePickerView>
                    break;
                case  DatePickerStates.Month:
                    <MonthsDatePickerView ValueChanged="@((v) => SetMonth(v))"></MonthsDatePickerView>
                    break;
                case DatePickerStates.Year:
                    <YearsDatePickerView></YearsDatePickerView>
                    break;
                default:
                    throw new ArgumentException("View Not Found!");
            }
    
        </CascadingValue>
    </div>
</div>